#!/usr/bin/env python3

import time
import zmq
import sys
import os
import json




def main():
    # Read bind IP from SMTPHOST file
    

    if not os.path.exists(f"/app/mailenv-data/host-environments.json"):
        print("❌ host-environments.json not found")
        host_environments = {}
        # sys.exit(1)
    else:
        with open(f"/app/mailenv-data/host-environments.json", "r") as f:
            host_environments = json.load(f)
            print(f"✅ host-environments.json loaded: {host_environments}")

    
    port = 9210
    bind_ip = "*"
    
    print(f"🚀 Starting Mailenv SMTP MQ server on {bind_ip}:{port}")
    
    context = zmq.Context()
    socket = context.socket(zmq.REP)

    #bind_ip = f"{bind_ip.replace('-host-', '')}.mailenv.com"
    socket.bind(f"tcp://{bind_ip}:{port}")
    
    mount_dir = f"/app/mailenv-data"
    
    print(f"✅ Mailenv SMTP MQ server bound to tcp://{bind_ip}:{port}")
    print(f"📁 Using mount directory: {mount_dir}")
    print("🔍 Waiting for messages...")
    
    try:
        while True:
            # Wait for next request from client
            message = socket.recv()
            print(f"📨 Received request")

            """
            {"from": "test@mailenv.com", "to": "test@mailenv.com", "subject": "Test email", "body": "This is a test email", "smtp-env": "smtp-255733", "message_id": "msgid-1234567890abcdef", "thread_id": "thread-abcdef1234567890", "user_id": "user-9876543210", "account_id": "acct-1122334455", "transaction_id": "txn-9988776655", "campaign_id": "camp-5566778899", "mailing_list_id": "mlist-4433221100", "customer_id": "cust-1234abcd5678efgh", "organization_id": "org-8765wxyz4321lmno", "timestamp": "2024-06-01T12:34:56Z", "priority": "normal", "attachments": [{"filename": "test.pdf", "id": "att-001", "size": 123456}, {"filename": "image.png", "id": "att-002", "size": 654321}], "headers": {"X-Mailenv-Tracking": "track-abc123", "X-Fake-Header": "fake-value"}, "flags": ["bulk", "test", "automated"], "ip_address": "192.0.2.123", "server_id": "srv-0001", "session_id": "sess-abcdef123456", "random_token": "tok-xyz987654321", "extra_data": {"foo": "bar", "baz": 42, "qux": [1, 2, 3]}}'
            """
            
            
            try:
                payload = json.loads(message)
                try:
                    _env = host_environments[payload['smtp-env']]
                except KeyError:
                    print(f"❌ Invalid SMTP Env: {payload['smtp-env']}")
                    socket.send(b"error")
                    continue

                
                # print(f"📤 Received payload: {payload}")
                # Use same pattern as run-dev.sh: mount_dir/environment_name
                _maildrop = f"{mount_dir}/{payload['smtp-env']}/mail"
                if not os.path.exists(_maildrop):
                    print(f"❌ Invalid Path: {_maildrop}")
                else:
                    with open(f"{_maildrop}/{payload['message_id']}", "w") as f:
                        f.write(json.dumps(payload))

                    socket.send(b"ok")
                    print("📤 ok")

            except json.JSONDecodeError:
                print(f"❌ Invalid JSON: {message}")
                socket.send(b"error")
                continue
    except KeyboardInterrupt:
        print(f"\n🛑 Shutting down Mailenv SMTP MQ server for host...")
    finally:
        socket.close()
        context.term()


if __name__ == "__main__":
    main() 